namespace: io.cloudslang.microfocus.dca.policy
flow:
  name: create_policy
  inputs:
    - auth_token
    - dca_server: "${get_sp('dca.host')}"
    - dca_port: "${get_sp('dca.port')}"
    - dca_protocol: "${get_sp('dca.protocol')}"
    - name:
        required: false
    - description:
        default: '190920191009'
        required: false
    - measure_sla: '10'
    - remediate_sla: '7'
    - remdiation_action:
        required: false
    - remediation_reboot: RebootAfterRemediation
  workflow:
    - create_policy:
        do:
          io.cloudslang.base.http.http_client_post:
            - url: "${''+dca_protocol+'://'+dca_server+':'+dca_port+'/urest/v1/policy'}"
            - auth_type: basic
            - trust_all_roots: 'true'
            - headers: "${'X-Auth-Token:' + auth_token}"
            - body: "${'{\"name\":\"'+name+'\",\"description\":\"'+description+'\",\"measurementSLO\":{\"amount\":'+measure_sla+',\"unit\":\"DAYS\"},\"remediationSLO\":{\"amount\":'+remediate_sla+',\"unit\":\"DAYS\"},\"remediationRebootOption\":\"'+remediation_reboot+'\"}'}"
            - content_type: application/json
        publish:
          - reponse: '${return_result}'
        navigate:
          - SUCCESS: get_item_id
          - FAILURE: on_failure
    - get_item_id:
        do:
          io.cloudslang.base.json.get_value:
            - json_input: '${reponse}'
            - json_path: id
        publish:
          - item_id: '${return_result}'
        navigate:
          - SUCCESS: SUCCESS
          - FAILURE: on_failure
  outputs:
    - policy_id: '${item_id}'
  results:
    - FAILURE
    - SUCCESS
extensions:
  graph:
    steps:
      create_policy:
        x: 100
        'y': 150
      get_item_id:
        x: 400
        'y': 150
        navigate:
          2f336ae0-f85c-df9a-b2cf-e71560f0e713:
            targetId: e5d9e3d0-2ae5-7341-cb01-7d709f3064f0
            port: SUCCESS
    results:
      SUCCESS:
        e5d9e3d0-2ae5-7341-cb01-7d709f3064f0:
          x: 700
          'y': 150
